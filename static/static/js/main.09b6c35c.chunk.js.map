{"version":3,"sources":["filecoin-logo.svg","gold.png","silver.png","bronze.png","gold-ribbon.png","silver-ribbon.png","bronze-ribbon.png","proof-DrgPoRep.svg","proof-Zigzag.svg","proof-Unknown.svg","Leaderboard.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Avatar","_ref","name","_ref$className","className","_ref$size","size","react_default","a","createElement","src","concat","style","width","height","alt","onError","e","target","md5","ReplTime","_ref2","time","toFixed","Entry","_ref3","medal","title","Leaderboard_Avatar","Leaderboard_Medal","type","Leaderboard_ReplTime","Medal","_ref4","srcs","gold","goldRibbon","silver","silverRibbon","bronze","bronzeRibbon","includes","top","right","ProofIcon","_ref5","typ","proofUnknown","proofDrgPoRep","proofZigzag","ProofDesc","DrgPoRep","Zigzag","Header","_ref6","params","Leaderboard_ProofIcon","lineHeight","numeral","format","challenge_count","vde","degree","expansion_degree","layers","CollapsedLeaderboard","_ref7","entries","onExpand","top3","slice","rest","backgroundColor","Leaderboard_Header","marginTop","listStyleType","map","_ref8","id","prover","secondsPerMBTime","key","Leaderboard_Entry","_ref9","length","_ref10","borderColor","onClick","ExpandedLeaderboard","_ref11","onCollapse","_ref12","_ref13","_ref14","_ref15","Leaderboard","_ref16","_useState","useState","_useState2","Object","slicedToArray","expanded","setExpanded","Leaderboard_ExpandedLeaderboard","Leaderboard_CollapsedLeaderboard","REFRESH_INTERVAL","process","REACT_APP_REFRESH_INTERVAL","logo","App","state","_this2","this","refresh","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","sent","ok","Error","status","t0","json","t1","t2","leaderboardData","setState","call","t3","console","error","setTimeout","finish","stop","apply","arguments","App_Header","leaderboards","data","groups","d","objectSpread","repl_time","reduce","values","filter","l","sort","b","board","processLeaderboardData","src_Leaderboard","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.09b6c35c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filecoin-logo.346c3e5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/gold.c47082ef.png\";","module.exports = __webpack_public_path__ + \"static/media/silver.f6a621b7.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze.486ada9a.png\";","module.exports = __webpack_public_path__ + \"static/media/gold-ribbon.86fe424e.png\";","module.exports = __webpack_public_path__ + \"static/media/silver-ribbon.e694d2b3.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze-ribbon.191e8a6b.png\";","module.exports = __webpack_public_path__ + \"static/media/proof-DrgPoRep.9d6b5bb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/proof-Zigzag.6e939b4e.svg\";","module.exports = __webpack_public_path__ + \"static/media/proof-Unknown.d46fcfb9.svg\";","import React, { useState } from 'react'\nimport numeral from 'numeral'\nimport md5 from 'md5'\nimport gold from './gold.png'\nimport silver from './silver.png'\nimport bronze from './bronze.png'\nimport goldRibbon from './gold-ribbon.png'\nimport silverRibbon from './silver-ribbon.png'\nimport bronzeRibbon from './bronze-ribbon.png'\nimport proofDrgPoRep from './proof-DrgPoRep.svg'\nimport proofZigzag from './proof-Zigzag.svg'\nimport proofUnknown from './proof-Unknown.svg'\n\nconst Avatar = ({ name, className = 'mr3 v-mid', size = 60 }) => (\n  <img\n    src={`https://github.com/${name}.png?size=${size}`}\n    className={className}\n    style={{ width: size / 2, height: size / 2 }}\n    alt={`${name} avatar`}\n    onError={e => { e.target.src = `https://www.gravatar.com/avatar/${md5(name)}?d=retro&s=${size}` }} />\n)\n\nconst ReplTime = ({ time }) => (\n  <span className='dib f5 fr bg-snow black pa2 br3 lh-solid tr courier ml3'>\n    {time.toFixed(3)}\n  </span>\n)\n\nconst Entry = ({ name, time, medal }) => (\n  <div className='flex' title={`${name} took ${time.toFixed(3)}s to replicate 1MiB of data`}>\n    <Avatar name={name} />\n    <span className='fw5 montserrat white truncate flex-auto'>{name}</span>\n    {medal ? <Medal type={medal} /> : null}\n    <ReplTime time={time} />\n  </div>\n)\n\nconst Medal = ({ type }) => {\n  const srcs = { gold, goldRibbon, silver, silverRibbon, bronze, bronzeRibbon }\n  const style = ['gold', 'silver', 'bronze'].includes(type)\n    ? { width: 45, height: 45, top: -6, right: 0 }\n    : { width: 45, height: 84, top: -19, right: 0 }\n  return (\n    <div className='relative w3-ns'>\n      <img src={srcs[type]} alt={type} className='absolute dn db-m db-l' style={style} />\n    </div>\n  )\n}\n\nconst ProofIcon = ({ typ, className }) => {\n  let src = proofUnknown\n  if (typ === 'DrgPoRep') {\n    src = proofDrgPoRep\n  } else if (typ === 'Zigzag') {\n    src = proofZigzag\n  }\n  return <img src={src} alt='icon by Eliricon from the Noun Project' width='50' height='50' className={className} />\n}\n\nconst ProofDesc = {\n  DrgPoRep: 'Depth Robust Graph Proof-of-Replication',\n  Zigzag: 'Specialized Layered Depth Robust Graph Proof-of-Replication'\n}\n\nconst Header = ({ params }) => (\n  <div className='pl4'>\n    <h2 className='montserrat fw2 mv3' title={ProofDesc[params.typ] || ''}>\n      <span className='dib w5'>\n        <ProofIcon className='mr2 v-mid' typ={params.typ} />\n        <span className='v-mid mr5'>{params.typ}</span>\n      </span>\n      <span className='dib v-mid' style={{ lineHeight: '50px' }}>{numeral(params.size).format('0,0')} <small className='gray'>bytes</small></span>\n    </h2>\n    <ul className='montserrat f6 fw2 list mv3 pl0'>\n      <li className='dib-ns mr3'><span className='gray mr2'>Challenges</span> {params.challenge_count}</li>\n      <li className='dib-ns mr3'><span className='gray mr2'>VDE</span> {params.vde}</li>\n      <li className='dib-ns mr3'><span className='gray mr2'>Degree</span> {params.degree}</li>\n      <li className='dib-ns mr3'><span className='gray mr2'>Expansion degree</span> {params.expansion_degree}</li>\n      <li className='dib-ns mr3'><span className='gray mr2'>Layers</span> {params.layers}</li>\n    </ul>\n  </div>\n)\n\nconst CollapsedLeaderboard = ({ entries, onExpand }) => {\n  const top3 = entries.slice(0, 3)\n  const rest = entries.slice(3)\n  return (\n    <div className='mb4 pv1 ph1 br3 shadow-3' style={{ backgroundColor: '#1E2135' }}>\n      <Header params={top3[0].params} />\n      <div className='pr4 fr' style={{ marginTop: '-2.25rem' }}>\n        <div className='f7 f6-m f6-l mt1 montserrat fw2 gray'>Repl time (s/MiB)</div>\n      </div>\n      <ol className='ma0 lh-copy mw7 mb3 pl3 center db gray' style={{ listStyleType: 'decimal' }}>\n        {top3.slice(0, 1).map(({ id, prover, secondsPerMBTime, params }) => (\n          <li\n            key={id}\n            className='tl f4 mh3 pa3 b--gold b--solid bw1 br3 br--top shadow-1'\n            style={{ backgroundColor: 'rgba(255, 183, 0, 0.75)' }}>\n            <Entry name={prover} time={secondsPerMBTime} medal='gold' />\n          </li>\n        ))}\n        {top3.slice(1, 2).map(({ id, prover, secondsPerMBTime, params }) => (\n          <li\n            key={id}\n            className={`tl f4 mh3 pa3 b--silver b--solid bw1 relative shadow-1 ${top3.length === 2 ? 'br3 br--bottom' : ''}`}\n            style={{ backgroundColor: 'rgba(153, 153, 153, 0.75)' }}>\n            <Entry name={prover} time={secondsPerMBTime} medal='silver' />\n          </li>\n        ))}\n        {top3.slice(2, 3).map(({ id, prover, secondsPerMBTime, params }) => (\n          <li\n            key={id}\n            className='tl f4 mh3 pa3 b--solid bw1 br3 br--bottom shadow-1'\n            style={{ borderColor: '#cd7f32', backgroundColor: 'rgba(205, 127, 50, 0.75)' }}>\n            <Entry name={prover} time={secondsPerMBTime} medal='bronze' />\n          </li>\n        ))}\n      </ol>\n      {rest.length ? (\n        <div className='tc mb3'>\n          <button type='button' className='montserrat f6 fw2 gray bw0 br3 ph3 pv2 bg-black-10 hover-bg-black-30 pointer' onClick={onExpand}>Show {rest.length} more</button>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nconst ExpandedLeaderboard = ({ entries, onCollapse }) => (\n  <div className='mb4 pv1 ph1 br3' style={{ backgroundColor: '#1E2135' }}>\n    <Header params={entries[0].params} />\n    <div className='pr4 fr' style={{ marginTop: '-2.25rem' }}>\n      <div className='f7 f6-m f6-l mt1 montserrat fw2 gray'>Repl time (s/MiB)</div>\n    </div>\n    <ol className='ma0 lh-copy mw7 mb3 pl3 center db gray' style={{ listStyleType: 'decimal' }}>\n      {entries.slice(0, 1).map(({ id, prover, secondsPerMBTime, params }) => (\n        <li\n          key={id}\n          className='tl f4 mh3 pa3 b--gold b--solid bw1 br3 shadow-1'\n          style={{ backgroundColor: 'rgba(255, 183, 0, 0.75)' }}>\n          <Entry name={prover} time={secondsPerMBTime} medal='goldRibbon' />\n        </li>\n      ))}\n      {entries.slice(1, 2).map(({ id, prover, secondsPerMBTime, params }) => (\n        <li\n          key={id}\n          className='tl f4 mt4 mh3 pa3 b--silver b--solid bw1 br3 shadow-1'\n          style={{ backgroundColor: 'rgba(153, 153, 153, 0.75)' }}>\n          <Entry name={prover} time={secondsPerMBTime} medal='silverRibbon' />\n        </li>\n      ))}\n      {entries.slice(2, 3).map(({ id, prover, secondsPerMBTime, params }) => (\n        <li\n          key={id}\n          className='tl f4 mt4 mh3 mb4 pa3 b--solid bw1 br3 shadow-1'\n          style={{ borderColor: '#cd7f32', backgroundColor: 'rgba(205, 127, 50, 0.75)' }}>\n          <Entry name={prover} time={secondsPerMBTime} medal='bronzeRibbon' />\n        </li>\n      ))}\n      {entries.slice(3).map(({ id, prover, secondsPerMBTime, params }) => (\n        <li key={id} className='tl mt3 mh3 ph3 f4'>\n          <Entry name={prover} time={secondsPerMBTime} />\n        </li>\n      ))}\n    </ol>\n    <div className='tc mb3'>\n      <button type='button' className='montserrat f6 fw2 gray bw0 br3 ph3 pv2 bg-black-10 hover-bg-black-30 pointer' onClick={onCollapse}>Minimise</button>\n    </div>\n  </div>\n)\n\nconst Leaderboard = ({ entries }) => {\n  const [ expanded, setExpanded ] = useState(false)\n  return expanded\n    ? <ExpandedLeaderboard entries={entries} onCollapse={() => setExpanded(false)} />\n    : <CollapsedLeaderboard entries={entries} onExpand={() => setExpanded(true)} />\n}\n\nexport default Leaderboard\n","/* eslint-env browser */\n\nimport React, { Component } from 'react'\nimport logo from './filecoin-logo.svg'\nimport Leaderboard from './Leaderboard'\n\nconst API_URL = process.env.REACT_APP_API_URL || 'leaderboard.json'\nconst REFRESH_INTERVAL = process.env.REACT_APP_REFRESH_INTERVAL || 10 * 1000\n\nconst Header = () => (\n  <header className='mw7 center'>\n    <h1 className='ma0 pv4 fw2 f1 montserrat tc'>\n      <img src={logo} alt='fil' width='80' className='db dib-l center mb3 mb0-l ml0-l mr4-l v-mid' />\n      <span className='v-mid'>Replication Game</span>\n    </h1>\n  </header>\n)\n\nfunction processLeaderboardData (data) {\n  data = data.map(d => ({ ...d, secondsPerMBTime: d.repl_time / (d.params.size / (1024 * 1024)) }))\n\n  // Group leaderboard by params ID - { id: [entries] }\n  const groups = data.reduce((groups, d) => {\n    groups[d.params.id] = (groups[d.params.id] || []).concat(d)\n    return groups\n  }, {})\n\n  // [[leaderboard], [leaderboard]]\n  return Object.values(groups)\n    .filter(l => l.length > 1) // Not really a leaderboard if only 1 person...\n    .sort((a, b) => b.length - a.length)\n    .map(board => board.sort((a, b) => a.secondsPerMBTime - b.secondsPerMBTime))\n}\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount () {\n    const refresh = async () => {\n      try {\n        const res = await fetch(API_URL)\n        if (!res.ok) throw new Error(`unexpected status ${res.status}`)\n        this.setState({ leaderboardData: await res.json() })\n      } catch (err) {\n        console.error('failed to fetch leaderboard data', err)\n      } finally {\n        setTimeout(refresh, REFRESH_INTERVAL)\n      }\n    }\n    refresh()\n  }\n\n  render () {\n    const { leaderboardData } = this.state\n\n    if (!leaderboardData) {\n      return (\n        <div className='sans-serif white'>\n          <Header />\n          <main className='tc'>\n            <p>Loading...</p>\n          </main>\n        </div>\n      )\n    }\n\n    const leaderboards = processLeaderboardData(leaderboardData)\n\n    return (\n      <div className='sans-serif white'>\n        <Header />\n        <main>\n          <div className='mw7 pl3 center pb2 cf'>\n            <h2 className='f4 f3-m f3-l mv3 pl4-m pl4-l tc tl-m tl-l montserrat fw2 ttu fl-m fl-l'>Leaderboards</h2>\n          </div>\n          <div className='mw7 pl3 center pb2 cf'>\n            {leaderboards.map(l => <Leaderboard entries={l} />)}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}