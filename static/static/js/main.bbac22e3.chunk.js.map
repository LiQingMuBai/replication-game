{"version":3,"sources":["filecoin-logo.svg","gold.png","silver.png","bronze.png","App.js","index.js"],"names":["module","exports","__webpack_require__","p","REFRESH_INTERVAL","process","REACT_APP_REFRESH_INTERVAL","Header","react_default","a","createElement","className","src","logo","alt","width","Avatar","_ref","name","_ref$className","_ref$size","size","concat","style","height","onError","e","target","md5","ReplTime","_ref2","time","Entry","_ref3","App_Avatar","title","App_ReplTime","numeral","format","Medal","_ref4","type","srcs","gold","silver","bronze","top","right","formatParams","_ref5","typ","challenge_count","vde","degree","expansion_degree","layers","join","App","state","_this2","this","refresh","_ref6","Object","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","sent","ok","Error","status","t0","json","t1","t2","leaderboardData","setState","call","t3","console","error","setTimeout","finish","stop","apply","arguments","App_Header","data","map","d","objectSpread","perByteTime","repl_time","params","sort","b","reduce","deduped","some","dd","prover","listStyleType","slice","_ref7","id","key","backgroundColor","App_Medal","App_Entry","_ref8","_ref9","borderColor","_ref10","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.bbac22e3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/filecoin-logo.346c3e5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/gold.86fe424e.png\";","module.exports = __webpack_public_path__ + \"static/media/silver.e694d2b3.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze.191e8a6b.png\";","import React, { Component } from 'react'\nimport numeral from 'numeral'\nimport md5 from 'md5'\nimport logo from './filecoin-logo.svg'\nimport gold from './gold.png'\nimport silver from './silver.png'\nimport bronze from './bronze.png'\n\nconst API_URL = process.env.REACT_APP_API_URL || '/leaderboard.json'\nconst REFRESH_INTERVAL = process.env.REACT_APP_REFRESH_INTERVAL || 10 * 1000\n\nconst Header = () => (\n  <header className=\"mw7 center\">\n    <h1 className='ma0 pv4 fw2 f1 montserrat tc'>\n      <img src={logo} alt='fil' width='80' className='db dib-l center mb3 mb0-l ml0-l mr4-l v-mid'/>\n      <span className='v-mid'>Replication Game</span>\n    </h1>\n  </header>\n)\n\nconst Avatar = ({name, className = 'mr3 v-mid', size = 60}) => {\n  return (\n    <img\n      src={`https://github.com/${name}.png?size=${size}`}\n      className={className}\n      style={{width: size/2, height: size/2}}\n      alt={`${name} avatar`}\n      onError={e => { e.target.src = `https://www.gravatar.com/avatar/${md5(name)}?d=retro&s=${size}` }} />\n  )\n}\n\nconst ReplTime = ({time}) => {\n  return (\n    <span className='dib f5 fr bg-snow black pa2 br3 lh-solid tr courier ml4'>{time}</span>\n  )\n}\n\nconst Entry = ({name, time}) => {\n  return (\n    <div className='flex'>\n      <Avatar name={name} />\n      <span className='fw5 montserrat white truncate flex-auto' title={name}>{name}</span>\n      <ReplTime time={numeral(time).format('0.000e+0')} />\n    </div>\n  )\n}\n\nconst Medal = ({ type }) => {\n  const srcs = { gold, silver, bronze }\n  return (\n    <img src={srcs[type]} alt={type} className='absolute dn db-m db-l' style={{ width: 45, top: -3, right: '8rem' }} />\n  )\n}\n\nfunction formatParams ({ typ, challenge_count, vde, degree, expansion_degree, layers }) {\n  return [\n    `Type: ${typ}`,\n    `Challenges: ${challenge_count}`,\n    `VDE: ${vde}`,\n    `Degree: ${degree}`,\n    `Expansion degree: ${expansion_degree}`,\n    `Layers: ${layers}`\n  ].join(', ')\n}\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount () {\n    const refresh = async () => {\n      try {\n        const res = await fetch(API_URL)\n        if (!res.ok) throw new Error(`unexpected status ${res.status}`)\n        this.setState({ leaderboardData: await res.json() })\n      } catch (err) {\n        console.error('failed to fetch leaderboard data', err)\n      } finally {\n        setTimeout(refresh, REFRESH_INTERVAL)\n      }\n    }\n    refresh()\n  }\n\n  render() {\n    const { leaderboardData } = this.state\n\n    if (!leaderboardData) {\n      return (\n        <div className=\"sans-serif white\">\n          <Header />\n          <main className='tc'>\n            <p>Loading...</p>\n          </main>\n        </div>\n      )\n    }\n\n    const data = leaderboardData\n      .map(d => ({ ...d, perByteTime: (d.repl_time * 1000) / d.params.size }))\n      .sort((a, b) => a.perByteTime - b.perByteTime)\n      .reduce((deduped, d) => {\n        const exists = deduped.some(dd => {\n          return dd.prover === d.prover &&\n            dd.repl_time === d.repl_time &&\n            dd.params.size === d.params.size\n        })\n        return exists ? deduped : deduped.concat(d)\n      }, [])\n\n    return (\n      <div className=\"sans-serif white\">\n        <Header />\n        <main>\n          <div className='mw7 pl3 center pb2 cf'>\n            <h2 className='f4 f3-m f3-l mv3 pl4-m pl4-l tc tl-m tl-l montserrat fw2 ttu fl-m fl-l'>Leaderboard</h2>\n            <div className='f4 f3-m f3-l mv3 pr4 fr'>\n              <div className='f6 f5-m f5-l mt1 montserrat fw2'>Time / byte (ms)</div>\n            </div>\n          </div>\n          <ol className='ma0 lh-copy mw7 mb5 pl3 center db gray' style={{listStyleType: 'decimal'}}>\n          {data.slice(0,1).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl f4 mh3 pa3 b--gold b--solid bw1 br3 relative shadow-1'\n              style={{ backgroundColor: 'rgba(255, 183, 0, 0.75)' }}\n              title={formatParams(params)}>\n              <Medal type='gold' />\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          {data.slice(1,2).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl f4 mt4 mh3 pa3 b--silver b--solid bw1 br3 relative shadow-1'\n              style={{ backgroundColor: 'rgba(153, 153, 153, 0.75)' }}\n              title={formatParams(params)}>\n              <Medal type='silver' />\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          {data.slice(2,3).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl f4 mt4 mh3 mb4 pa3 b--solid bw1 br3 relative shadow-1'\n              style={{ borderColor: '#cd7f32', backgroundColor: 'rgba(205, 127, 50, 0.75)' }}\n              title={formatParams(params)}>\n              <Medal type='bronze' />\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          {data.slice(3).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl mt3 mh3 ph3 f4'\n              title={formatParams(params)}>\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          </ol>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}