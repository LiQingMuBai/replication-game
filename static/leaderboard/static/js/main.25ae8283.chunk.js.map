{"version":3,"sources":["gold.png","silver.png","bronze.png","App.js","index.js","filecoin-logo.svg"],"names":["module","exports","__webpack_require__","p","REFRESH_INTERVAL","process","REACT_APP_REFRESH_INTERVAL","Header","react_default","a","createElement","className","src","logo","alt","width","Avatar","_ref","name","_ref$className","_ref$size","size","concat","style","height","ReplTime","_ref2","time","Entry","_ref3","Fragment","App_Avatar","App_ReplTime","numeral","format","Medal","_ref4","type","srcs","gold","silver","bronze","top","right","formatParams","_ref5","typ","challenge_count","vde","degree","expansion_degree","layers","join","App","state","_this2","this","refresh","_ref6","Object","asyncToGenerator","regenerator_default","mark","_callee","res","wrap","_context","prev","next","fetch","sent","ok","Error","status","t0","json","t1","t2","leaderboardData","setState","call","t3","console","error","setTimeout","finish","stop","apply","arguments","App_Header","data","map","d","objectSpread","perByteTime","repl_time","params","sort","b","reduce","deduped","some","dd","prover","listStyleType","slice","_ref7","id","key","backgroundColor","title","App_Medal","App_Entry","_ref8","_ref9","borderColor","_ref10","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.25ae8283.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gold.86fe424e.png\";","module.exports = __webpack_public_path__ + \"static/media/silver.e694d2b3.png\";","module.exports = __webpack_public_path__ + \"static/media/bronze.191e8a6b.png\";","import React, { Component } from 'react'\nimport numeral from 'numeral'\nimport logo from './filecoin-logo.svg'\nimport gold from './gold.png'\nimport silver from './silver.png'\nimport bronze from './bronze.png'\n\nconst API_URL = process.env.REACT_APP_API_URL || '/leaderboard.json'\nconst REFRESH_INTERVAL = process.env.REACT_APP_REFRESH_INTERVAL || 10 * 1000\n\nconst Header = () => (\n  <header className=\"mw7 center pl5\">\n    <h1 className='ma0 pv4 fw2 f1 montserrat'>\n      <img src={logo} alt='fil' width='80' className='db dib-l mb3 mb0-l mr4 v-mid'/>\n      <span className='v-mid'>Replication challenge</span>\n    </h1>\n  </header>\n)\n\nconst Avatar = ({name, className = 'ml2 mr4 v-mid', size = 60}) => {\n  return (\n    <img src={`https://github.com/${name}.png?size=${size}`} className={className} style={{width: size/2, height: size/2}} alt={`${name} avatar`} />\n  )\n}\n\nconst ReplTime = ({time}) => {\n  return (\n    <span className='dib f5 fr bg-snow black pa2 br3 lh-solid tr courier'>{time}</span>\n  )\n}\n\nconst Entry = ({name, time}) => {\n  return (\n    <React.Fragment>\n      <Avatar name={name} />\n      <span className='fw5 montserrat white truncate'>{name}</span>\n      <ReplTime time={numeral(time).format('0.000e+0')} />\n    </React.Fragment>\n  )\n}\n\nconst Medal = ({ type }) => {\n  const srcs = { gold, silver, bronze }\n  return (\n    <img src={srcs[type]} alt={type} className='absolute dn db-m db-l' style={{ width: 45, top: -3, right: '8rem' }} />\n  )\n}\n\nfunction formatParams ({ typ, challenge_count, vde, degree, expansion_degree, layers }) {\n  return [\n    `Type: ${typ}`,\n    `Challenges: ${challenge_count}`,\n    `VDE: ${vde}`,\n    `Degree: ${degree}`,\n    `Expansion degree: ${expansion_degree}`,\n    `Layers: ${layers}`\n  ].join(', ')\n}\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount () {\n    const refresh = async () => {\n      try {\n        const res = await fetch(API_URL)\n        if (!res.ok) throw new Error(`unexpected status ${res.status}`)\n        this.setState({ leaderboardData: await res.json() })\n      } catch (err) {\n        console.error('failed to fetch leaderboard data', err)\n      } finally {\n        setTimeout(refresh, REFRESH_INTERVAL)\n      }\n    }\n    refresh()\n  }\n\n  render() {\n    const { leaderboardData } = this.state\n\n    if (!leaderboardData) {\n      return (\n        <div className=\"sans-serif white\">\n          <Header />\n          <main className='tc'>\n            <p>Loading...</p>\n          </main>\n        </div>\n      )\n    }\n\n    const data = leaderboardData\n      .map(d => ({ ...d, perByteTime: (d.repl_time * 1000) / d.params.size }))\n      .sort((a, b) => a.perByteTime - b.perByteTime)\n      .reduce((deduped, d) => {\n        const exists = deduped.some(dd => {\n          return dd.prover === d.prover &&\n            dd.repl_time === d.repl_time &&\n            dd.params.size === d.params.size\n        })\n        return exists ? deduped : deduped.concat(d)\n      }, [])\n\n    return (\n      <div className=\"sans-serif white\">\n        <Header />\n        <main>\n          <div className='mw7 center tr pb2'>\n            <span className='f5 pr2 mr2'>Time / byte (ms)</span>\n          </div>\n          <ol className='ma0 lh-copy mw7 mb5 center db gray' style={{listStyleType: 'decimal'}}>\n          {data.slice(0,1).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl f4 pa3 b--gold b--solid bw1 br3 relative shadow-1'\n              style={{ backgroundColor: 'rgba(255, 183, 0, 0.75)' }}\n              title={formatParams(params)}>\n              <Medal type='gold' />\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          {data.slice(1,2).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl f4 mt4 pa3 b--silver b--solid bw1 br3 relative shadow-1'\n              style={{ backgroundColor: 'rgba(153, 153, 153, 0.75)' }}\n              title={formatParams(params)}>\n              <Medal type='silver' />\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          {data.slice(2,3).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl f4 mt4 mb4 pa3 b--solid bw1 br3 relative shadow-1'\n              style={{ borderColor: '#cd7f32', backgroundColor: 'rgba(205, 127, 50, 0.75)' }}\n              title={formatParams(params)}>\n              <Medal type='bronze' />\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          {data.slice(3).map(({ id, prover, perByteTime, params }) => (\n            <li\n              key={id}\n              className='tl mt3 ph3 f4'\n              title={formatParams(params)}>\n              <Entry name={prover} time={perByteTime} />\n            </li>\n          ))}\n          </ol>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/filecoin-logo.346c3e5d.svg\";"],"sourceRoot":""}